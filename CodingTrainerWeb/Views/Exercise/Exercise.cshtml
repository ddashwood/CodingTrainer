@model CodingTrainer.CodingTrainerModels.Exercise

@{
    ViewBag.Title = "Exercise - " + Model.ExerciseName;
}

@section scripts {
    <script>
        var exerciseGlobals = {};
        exerciseGlobals.model = @Html.Raw(Json.Encode(new { Model.ChapterNo, Model.ExerciseNo }));
        exerciseGlobals.theme = '@ViewBag.ActiveTheme';
    </script>
    <script src="~/Scripts/app/sidebar.js"></script>
    <script src="~/Scripts/app/exercise.js"></script>
}

<div id="exercise-sidebar">
    @Html.Action("ExerciseSidebar", new { currentExercise = Model })
</div>

@*Seperation from "Show/Hide Sidebar" button - only required on small screens when button is displayed*@
<div class="visible-sm visible-xs top-buffer"></div>

<ul class="nav nav-tabs col-md-9 col-sm-12">
    <li class="active"><a href="#exercise" data-toggle="tab">Exercise</a></li>
    <li><a href="#submissions" data-toggle="tab">Submissions</a></li>
    <li><a href="#answer" data-toggle="tab">Model Answer</a></li>
</ul>

<h2>Exercise - @Model.ExerciseName</h2>

<div class="tab-content col-md-9 col-sm-12">
    <div id="exercise" class="tab-pane fade in active">
        <h2>@Model.Chapter.ChapterName</h2>
        <h4>@Model.ExerciseName</h4>
        @{
            var contentVm = new CodingTrainer.CodingTrainerWeb.Models.ExerciseContentViewModel();
            contentVm.Exercise = Model;
            contentVm.Url = Url;
            contentVm.Html = Html;
        }
        @Html.Action("Content", contentVm)
    </div>


    <div id="submissions" class="tab-pane fade">
        <h3>Submissions</h3>
        <div id="submissions-content"></div>
    </div>

    <div id="answer" class="tab-pane fade">
        <div id="answer-not-ready">
            <p>
                Page is still initialising, please return to this screen in a moment.
            </p>
        </div>
        <div id="answer-content" style="display:none">
            @Html.Action("ModelAnswer", new { chapter = Model.ChapterNo, exercise = Model.ExerciseNo })
        </div>
    </div>
</div>
